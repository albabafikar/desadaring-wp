{* VARIABLES *}

{var $elmAddress = $el->option('address')}

{var $scrollWheel = $el->option(mousewheelZoom) ? "true" : "false"}
{var $autoZoomAndFit = $el->option('autoZoomAndFit') ? true : false}
{var $clustering = $el->option('clusterEnable') ? true : false}
{var $clustering = $el->option('clusterEnable') ? true : false}
{var $geoLocation = $el->option('geoLocationEnable') ? true : false}
{var $radius = false}

{var $streetview = false}
{var $swheading = ''}
{var $swpitch = ''}
{var $swzoom = ''}

{* initialise streetview parameters from element settings *}
{var $elmStreetview = false}
{if $elmAddress['streetview']}
	{var $streetview = true}
	{var $elmStreetview = true}
	{var $address 	= array(
		'latitude'  => $elmAddress['latitude'],
		'longitude' => $elmAddress['longitude'],
	)}
	{var $swheading = $elmAddress['swheading']}
	{var $swpitch   = $elmAddress['swpitch']}
	{var $swzoom    = $elmAddress['swzoom']}
{else}
	{var $address = $el->option('address')}
{/if}

{var $mapHeight = 'style="height: '. $el->option->height .'px;"'}

{? global $wp_query}
{? global $__ait_query_data;}
{var $globalQueryVars = $wp_query->query_vars}

{var $pageType = 'normal'}

{*********************************}
{******** IS SEARCH PAGE *********}
{*********************************}
{if $wp->isSearch && isset($_REQUEST['a'])}
	{var $pageType = 'search'}
	{var $searchQuery = wp_parse_args($_GET)}
	{* enable geolocation because searched with radius *}
	{if !empty($_REQUEST['rad'])}
		{var $geoLocation = true}
		{var $radius = $_REQUEST['rad']}
	{/if}

{*********************************}
{******** IS AIT TAX PAGE ********}
{*********************************}
{elseif $wp->isTax('ait-items') or $wp->isTax('ait-locations')}
	{var $pageType = 'ait-items'}

{*********************************}
{****** IS SINGLE ITEM PAGE ******}
{*********************************}
{elseif $wp->isSingular('ait-item')}
	{var $pageType = 'ait-item'}
	{var $autoZoomAndFit = true}
	{var $streetview = false}
	{var $itemAddress = $post->meta('item-data')->map}
	{if $itemAddress['streetview']}
		{var $streetview = true}
		{var $address 	= array(
			'latitude'  => $itemAddress['latitude'],
			'longitude' => $itemAddress['longitude'],
		)}
		{var $swheading = $itemAddress['swheading']}
		{var $swpitch   = $itemAddress['swpitch']}
		{var $swzoom    = $itemAddress['swzoom']}
	{/if}

{**************************************}
{****** IS SINGLE EVENT PRO PAGE ******}
{**************************************}
{elseif $wp->isSingular('ait-event-pro')}
	{var $pageType = 'ait-event-pro'}
	{var $autoZoomAndFit = true}
	{var $streetview = false}
	{var $itemAddress = aitEventAddress($post, true)}
	{if $itemAddress['streetview']}
		{var $streetview = true}
		{var $address 	= array(
			'latitude'  => $itemAddress['latitude'],
			'longitude' => $itemAddress['longitude'],
		)}

		{var $swheading = $itemAddress['swheading']}
		{var $swpitch   = $itemAddress['swpitch']}
		{var $swzoom    = $itemAddress['swzoom']}
	{/if}
{/if}

<div id="{$element->htmlId}-main">

	{if ($el->hasOption(title) and $el->option->title) or ($el->hasOption(description) and $el->option->description)}
	<div class="elm-wrapper">
		<div n:class="elm-mainheader, $el->hasOption(headAlign) ? $el->option->headAlign">
			{if $el->option->title}
				<h2 class="elm-maintitle">{!$el->option->title}</h2>
			{/if}
			{if $el->option->description}
				<p class="elm-maindesc">{!$el->option->description}</p>
			{/if}
		</div>
	</div>
	{/if}

	<div id="{$htmlId}" class="{$htmlClass}">

		{var $mapParams = array(
			'name'				=> 'headerMap',
			'enableAutoFit'     => $autoZoomAndFit,
			'enableClustering'  => $clustering,
			'typeId'            => $el->option('type'),
			'clusterRadius'     => intval($el->option('clusterRadius')),
			'enableGeolocation' => $geoLocation,
			'radius'			=> $radius,
			'streetview'		=> $streetview,
			'address'			=> $address,
			'swheading'			=> $swheading,
			'swpitch'			=> $swpitch,
			'swzoom'			=> $swzoom,
			'externalInfoWindow'=> false,
			'i18n'		        => aitMapTranslations(),
		)}
		{includePart parts/google-map
			options     => aitGetMapOptions($el->options),
			markers     => array(),
			params      => $mapParams,
			containerID => $htmlId,
			mapHeight   => $mapHeight
		}

		{includePart "ait-theme/elements/header-map/javascript"}
	</div>

</div>
